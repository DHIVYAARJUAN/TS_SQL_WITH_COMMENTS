-- VERSION 0.4 STARTDATE:01/10/2014 ENDDATE:03/10/2014 ISSUE NO:80 COMMENT NO:32 DESC:IMPLEMENTED ERROR MSG GET FROM CONFIG TABLE DONE BY :DHIVYA
-- VERSION 0.3 STARTDATE:26/09/2014 ENDDATE:26/09/2014 ISSUE NO:80 COMMENT NO:25 DESC:ADDED ABSENT FLAG, FOR UPDATE ADMIN ONLY. DONE BY :RAJA
-- VERSION 0.2 STARTDATE:15/09/2014 ENDDATE:15/09/2014 ISSUE NO:80 COMMENT NO:10 DESC:ADDED DATE FIELD FOR UPDATION. DONE BY :RAJA
DROP PROCEDURE IF EXISTS SP_TS_DAILY_REPORT_SEARCH_UPDATE;
CREATE PROCEDURE SP_TS_DAILY_REPORT_SEARCH_UPDATE(
IN UARDID INTEGER,
IN REPORT TEXT,
IN REASON TEXT,
IN FINALDATE DATE, 
IN URCID INTEGER, 
IN LOGIN_ID TEXT, 
IN URE_PERMISSION TEXT,
IN URE_ATTENDANCE TEXT,
IN URE_PDID TEXT, 
IN URE_MORNING_SESSION TEXT, 
IN URE_AFTERNOON_SESSION TEXT,
IN BANDWIDTH DECIMAL(6,2), 
IN URE_ULD_ID TEXT,
IN ABSENTFLAG CHAR(1),
OUT REPORT_UPDATE TEXT)
BEGIN
	DECLARE OLD_REPORT TEXT;
	DECLARE OLD_REASON TEXT;
	DECLARE OLD_FINALDATE DATE;
	DECLARE OLD_URCID INTEGER;
	DECLARE OLD_LOGIN_ID TEXT;
	DECLARE OLD_URE_PERMISSION TEXT;
	DECLARE OLD_URE_ATTENDANCE TEXT;
	DECLARE OLD_URE_PDID TEXT;
	DECLARE OLD_URE_MORNING_SESSION TEXT;
	DECLARE OLD_URE_AFTERNOON_SESSION TEXT;
	DECLARE OLD_BANDWIDTH DECIMAL(6,2);
	DECLARE OLD_URE_ULD_ID TEXT;
  	DECLARE OLD_ABSENTFLAG CHAR(1);
  	DECLARE PERMID INTEGER;
	DECLARE ERROR_MSG TEXT;
	DECLARE ATTENID INTEGER;
	DECLARE SESSION_ID INTEGER;
	DECLARE PROJECT_STARTDATE DATE;
	DECLARE REPORTDATE TEXT;
	DECLARE ULDID INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		SET REPORT_UPDATE=0;
	END;
	SET AUTOCOMMIT=0;
	START TRANSACTION;
	SET REPORT_UPDATE=0;
  
	IF (REPORT='') THEN
		SET REPORT=NULL;
	END IF;
	IF (REASON='') THEN
		SET REASON=NULL;
	END IF;
	IF (URE_PERMISSION='') THEN
		SET URE_PERMISSION=NULL;
	END IF;
	IF (URE_PDID = '') THEN
		SET URE_PDID =  NULL;
	END IF;
	IF (ABSENTFLAG='') THEN
		SET ABSENTFLAG=NULL;
	END IF;
	SET REPORT_UPDATE='';
	SET PERMID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION);
	SET ATTENID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE);
	SET SESSION_ID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA=URE_MORNING_SESSION);
	SET PROJECT_STARTDATE=(SELECT PS_START_DATE FROM PROJECT_STATUS WHERE PD_ID=URE_PDID AND PS_REC_VER=1);
	SET OLD_REPORT=(SELECT UARD_REPORT FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_REASON=(SELECT UARD_REASON FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_FINALDATE=(SELECT UARD_DATE FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_URCID=(SELECT URC_ID FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_LOGIN_ID=(SELECT ULD_LOGINID FROM USER_LOGIN_DETAILS WHERE ULD_ID=(SELECT ULD_ID FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID));
	SET OLD_URE_PERMISSION=(SELECT UARD_PERMISSION FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_URE_ATTENDANCE=(SELECT UARD_ATTENDANCE FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_URE_PDID=(SELECT UARD_PDID FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_URE_MORNING_SESSION=(SELECT AC_DATA FROM ATTENDANCE_CONFIGURATION WHERE AC_ID=(SELECT UARD_AM_SESSION FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID));
	SET OLD_URE_AFTERNOON_SESSION=(SELECT AC_DATA FROM ATTENDANCE_CONFIGURATION WHERE AC_ID=(SELECT UARD_PM_SESSION FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID));
	SET OLD_BANDWIDTH=(SELECT UARD_BANDWIDTH FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID= UARDID);
	SET OLD_URE_ULD_ID=(SELECT UARD_USERSTAMP_ID FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET OLD_ABSENTFLAG=(SELECT ABSENT_FLAG FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET ULDID=(SELECT ULD_ID FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_ID=UARDID);
	SET REPORT_UPDATE=' ';
	-- FOR CHECKING PERMISSION SHOULD NOT GREATER THAN 3 HRS

	IF (URE_PERMISSION IS NOT NULL) THEN
      IF  (PERMID NOT BETWEEN 9 AND 14) THEN
        SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 19);
     	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
      END IF;
	END IF;

	-- FOR CHECKING ATTENDANCE
	IF (URE_ATTENDANCE IS NOT NULL) THEN
		IF  (ATTENID NOT BETWEEN 4 AND 8) THEN
	         SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 20);
	         SET REPORT_UPDATE =(SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
		END IF;
	END IF;

	-- FOR CHECKING SESSION
	IF(URE_MORNING_SESSION  IS NOT NULL OR URE_AFTERNOON_SESSION IS NOT NULL) THEN
       IF  ( SESSION_ID NOT BETWEEN 1 AND 3) THEN
         	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 21);
        	SET REPORT_UPDATE =(SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
       END IF;
	END IF;

-- REPORT DATE SHOULD>=PROJECT STARTDATE

	IF OLD_FINALDATE!=FINALDATE THEN
	    IF FINALDATE<PROJECT_STARTDATE THEN
	          SET ERROR_MSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 66);
	          SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[RSDATE]',FINALDATE));
	          SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[PSDATE]',PROJECT_STARTDATE));
	          SET REPORT_UPDATE =(SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
	    END IF;
	END IF;

	-- BOTH REPORT & REASON SHOULD NOT BE NULL AT THE SAME TIME
	IF (REPORT IS NULL AND REASON IS NULL) THEN
	    SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 23);
	    SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
	END IF;

	-- BANDWIDTH SHOULD NOT GREATER THAN 1000
	IF (BANDWIDTH IS NOT NULL) THEN
	    	SET @BANDWIDTH_VALUE=(SELECT SUBSTRING_INDEX(BANDWIDTH, '.', 1));
	        IF(LENGTH(@BANDWIDTH_VALUE) > 4) THEN
	            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 24);
	         	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
	        END IF;
	        IF BANDWIDTH>1000 THEN
	          SET ERROR_MSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=67);
	          SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[BW]',BANDWIDTH));
	          SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
	        END IF;
	END IF;

	IF(URE_ATTENDANCE IS NOT NULL) THEN
    IF (ATTENID=4)THEN
        IF (REPORT IS NULL AND REASON IS NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 25);
           	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
        END IF;
        IF (URE_PDID IS NULL) THEN
           SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 26);
           SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
        END IF;
    END IF;
    IF (ATTENID=5)THEN
        IF (URE_PDID IS NULL) THEN
           SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 27);
           SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
         END IF;
        IF (REPORT IS NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 30);
          	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
        END IF;
    END IF;
    IF (ATTENID=6)THEN
        IF (URE_PERMISSION IS NOT NULL) THEN
           	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 28);
          	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
        END IF;
        IF (REASON IS NULL) THEN
       		SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 31);
          	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
       	END IF;
      	IF (URE_PDID IS NOT NULL) THEN
       		SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 32);
          	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
      	END IF;
    END IF;
    IF (ATTENID=7)THEN
          IF (URE_PERMISSION IS NOT NULL) THEN
           	 	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 29);
          		SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
          END IF;
          IF (URE_PDID IS NOT NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 33);
          	SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
          END IF;
    END IF;
END IF;

IF OLD_FINALDATE!=FINALDATE THEN
	SET @CHECK_FLAG=5;
	IF EXISTS (SELECT UARD_REPORT FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID = ULDID AND UARD_DATE = FINALDATE) THEN
        SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 22);
        SET REPORT_UPDATE = (SELECT CONCAT(REPORT_UPDATE,',',ERROR_MSG));
    END IF;
END IF;

SET REPORT_UPDATE=(SELECT SUBSTRING(REPORT_UPDATE,3));
IF REPORT_UPDATE=' ' THEN
	IF (URCID=1) THEN
		

		-- FOR UPDATE THE NEW VALUES
		IF ((REPORT!=OLD_REPORT)OR(REASON!=OLD_REASON)OR(FINALDATE!=OLD_FINALDATE)OR(URCID!=OLD_URCID)OR(LOGIN_ID!=OLD_LOGIN_ID)OR(URE_PERMISSION!=OLD_URE_PERMISSION)OR(URE_ATTENDANCE!=OLD_URE_ATTENDANCE)
		OR(URE_PDID!=OLD_URE_PDID)OR(URE_MORNING_SESSION!=OLD_URE_MORNING_SESSION)OR(URE_AFTERNOON_SESSION!=OLD_URE_AFTERNOON_SESSION)OR(BANDWIDTH!=OLD_BANDWIDTH)OR(URE_ULD_ID!=OLD_URE_ULD_ID)OR(ABSENTFLAG!=OLD_ABSENTFLAG)) THEN
			UPDATE USER_ADMIN_REPORT_DETAILS SET UARD_REPORT=REPORT, UARD_REASON=REASON, UARD_DATE=FINALDATE, URC_ID=URCID, ULD_ID=(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=LOGIN_ID), 
			UARD_PERMISSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION), UARD_ATTENDANCE=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE),UARD_PDID=URE_PDID,
			UARD_AM_SESSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA= URE_MORNING_SESSION), UARD_PM_SESSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA= URE_AFTERNOON_SESSION),
			UARD_BANDWIDTH=BANDWIDTH, UARD_USERSTAMP_ID=(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=URE_ULD_ID),ABSENT_FLAG=ABSENTFLAG WHERE UARD_ID=UARDID;
			SET REPORT_UPDATE=1;		
		END IF;
    
  	ELSE
  		-- FOR UPDATE THE NEW VALUES
		IF ((REPORT!=OLD_REPORT)OR(REASON!=OLD_REASON)OR(FINALDATE!=OLD_FINALDATE)OR(URCID!=OLD_URCID)OR(LOGIN_ID!=OLD_LOGIN_ID)OR(URE_PERMISSION!=OLD_URE_PERMISSION)OR(URE_ATTENDANCE!=OLD_URE_ATTENDANCE)
		OR(URE_PDID!=OLD_URE_PDID)OR(URE_MORNING_SESSION!=OLD_URE_MORNING_SESSION)OR(URE_AFTERNOON_SESSION!=OLD_URE_AFTERNOON_SESSION)OR(BANDWIDTH!=OLD_BANDWIDTH)OR(URE_ULD_ID!=OLD_URE_ULD_ID)) THEN
			UPDATE USER_ADMIN_REPORT_DETAILS SET UARD_REPORT=REPORT, UARD_REASON=REASON, UARD_DATE=FINALDATE, URC_ID=URCID, ULD_ID=(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=LOGIN_ID), 
			UARD_PERMISSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION), UARD_ATTENDANCE=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE),UARD_PDID=URE_PDID,
			UARD_AM_SESSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA= URE_MORNING_SESSION), UARD_PM_SESSION=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA= URE_AFTERNOON_SESSION),
			UARD_BANDWIDTH=BANDWIDTH, UARD_USERSTAMP_ID=(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=URE_ULD_ID) WHERE UARD_ID=UARDID;
			SET REPORT_UPDATE=1;		
		END IF;  
	END IF;
END IF;
	COMMIT;
END;
/*
CALL SP_TS_DAILY_REPORT_SEARCH_UPDATE(7910,'H','TESTING','2014-09-03',1,'safiyullah.mohideen@ssomens.com','2','1','1','PRESENT','PRESENT',250.00,'safiyullah.mohideen@ssomens.com','X',@REPORT_UPDATE);
SELECT @REPORT_UPDATE;
*/